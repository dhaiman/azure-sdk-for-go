package autosuggest

// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"encoding/json"
	"github.com/Azure/go-autorest/autorest"
)

// The package's fully qualified name.
const fqdn = "github.com/Azure/azure-sdk-for-go/services/bing/v1.0/autosuggest"

// Action ...
type Action struct {
	// Result - READ-ONLY
	Result *[]Thing `json:"result,omitempty"`
	// DisplayName - READ-ONLY
	DisplayName *string `json:"displayName,omitempty"`
	// IsTopAction - READ-ONLY
	IsTopAction *bool `json:"isTopAction,omitempty"`
	// ServiceURL - READ-ONLY
	ServiceURL *string `json:"serviceUrl,omitempty"`
	// ThumbnailURL - READ-ONLY; The URL to a thumbnail of the item.
	ThumbnailURL *string `json:"thumbnailUrl,omitempty"`
	// About - READ-ONLY; For internal use only.
	About *[]Thing `json:"about,omitempty"`
	// Mentions - READ-ONLY; For internal use only.
	Mentions *[]Thing `json:"mentions,omitempty"`
	// Provider - READ-ONLY; The source of the creative work.
	Provider *[]Thing `json:"provider,omitempty"`
	// Creator - READ-ONLY
	Creator *Thing `json:"creator,omitempty"`
	// Text - READ-ONLY; Text content of this creative work
	Text *string `json:"text,omitempty"`
	// DiscussionURL - READ-ONLY
	DiscussionURL *string `json:"discussionUrl,omitempty"`
	// CommentCount - READ-ONLY
	CommentCount *int32 `json:"commentCount,omitempty"`
	// MainEntity - READ-ONLY
	MainEntity *Thing `json:"mainEntity,omitempty"`
	// HeadLine - READ-ONLY
	HeadLine *string `json:"headLine,omitempty"`
	// CopyrightHolder - READ-ONLY
	CopyrightHolder *Thing `json:"copyrightHolder,omitempty"`
	// CopyrightYear - READ-ONLY
	CopyrightYear *int32 `json:"copyrightYear,omitempty"`
	// Disclaimer - READ-ONLY
	Disclaimer *string `json:"disclaimer,omitempty"`
	// IsAccessibleForFree - READ-ONLY
	IsAccessibleForFree *bool `json:"isAccessibleForFree,omitempty"`
	// Genre - READ-ONLY
	Genre *[]string `json:"genre,omitempty"`
	// IsFamilyFriendly - READ-ONLY
	IsFamilyFriendly *bool `json:"isFamilyFriendly,omitempty"`
	// URL - READ-ONLY; The URL to get more information about the thing represented by this object.
	URL *string `json:"url,omitempty"`
	// ReadLink - READ-ONLY; The URL that returns this resource.
	ReadLink *string `json:"readLink,omitempty"`
	// WebSearchURL - READ-ONLY; The URL To Bing's search result for this item.
	WebSearchURL *string `json:"webSearchUrl,omitempty"`
	// PotentialAction - READ-ONLY
	PotentialAction *[]Action `json:"potentialAction,omitempty"`
	// ImmediateAction - READ-ONLY
	ImmediateAction *[]Action `json:"immediateAction,omitempty"`
	// PreferredClickthroughURL - READ-ONLY
	PreferredClickthroughURL *string `json:"preferredClickthroughUrl,omitempty"`
	// AdaptiveCard - READ-ONLY
	AdaptiveCard *string `json:"adaptiveCard,omitempty"`
	// ID - READ-ONLY; A String identifier.
	ID   *string `json:"id,omitempty"`
	Type *string `json:"_type,omitempty"`
}

// MarshalJSON is the custom marshaler for Action.
func (a Action) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if a.Type != nil {
		objectMap["_type"] = a.Type
	}
	return json.Marshal(objectMap)
}

// Answer defines an answer.
type Answer struct {
	// ReadLink - READ-ONLY; The URL that returns this resource.
	ReadLink *string `json:"readLink,omitempty"`
	// WebSearchURL - READ-ONLY; The URL To Bing's search result for this item.
	WebSearchURL *string `json:"webSearchUrl,omitempty"`
	// PotentialAction - READ-ONLY
	PotentialAction *[]Action `json:"potentialAction,omitempty"`
	// ImmediateAction - READ-ONLY
	ImmediateAction *[]Action `json:"immediateAction,omitempty"`
	// PreferredClickthroughURL - READ-ONLY
	PreferredClickthroughURL *string `json:"preferredClickthroughUrl,omitempty"`
	// AdaptiveCard - READ-ONLY
	AdaptiveCard *string `json:"adaptiveCard,omitempty"`
	// ID - READ-ONLY; A String identifier.
	ID   *string `json:"id,omitempty"`
	Type *string `json:"_type,omitempty"`
}

// MarshalJSON is the custom marshaler for Answer.
func (a Answer) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if a.Type != nil {
		objectMap["_type"] = a.Type
	}
	return json.Marshal(objectMap)
}

// CreativeWork the most generic kind of creative work, including books, movies, photographs, software
// programs, etc.
type CreativeWork struct {
	// ThumbnailURL - READ-ONLY; The URL to a thumbnail of the item.
	ThumbnailURL *string `json:"thumbnailUrl,omitempty"`
	// About - READ-ONLY; For internal use only.
	About *[]Thing `json:"about,omitempty"`
	// Mentions - READ-ONLY; For internal use only.
	Mentions *[]Thing `json:"mentions,omitempty"`
	// Provider - READ-ONLY; The source of the creative work.
	Provider *[]Thing `json:"provider,omitempty"`
	// Creator - READ-ONLY
	Creator *Thing `json:"creator,omitempty"`
	// Text - READ-ONLY; Text content of this creative work
	Text *string `json:"text,omitempty"`
	// DiscussionURL - READ-ONLY
	DiscussionURL *string `json:"discussionUrl,omitempty"`
	// CommentCount - READ-ONLY
	CommentCount *int32 `json:"commentCount,omitempty"`
	// MainEntity - READ-ONLY
	MainEntity *Thing `json:"mainEntity,omitempty"`
	// HeadLine - READ-ONLY
	HeadLine *string `json:"headLine,omitempty"`
	// CopyrightHolder - READ-ONLY
	CopyrightHolder *Thing `json:"copyrightHolder,omitempty"`
	// CopyrightYear - READ-ONLY
	CopyrightYear *int32 `json:"copyrightYear,omitempty"`
	// Disclaimer - READ-ONLY
	Disclaimer *string `json:"disclaimer,omitempty"`
	// IsAccessibleForFree - READ-ONLY
	IsAccessibleForFree *bool `json:"isAccessibleForFree,omitempty"`
	// Genre - READ-ONLY
	Genre *[]string `json:"genre,omitempty"`
	// IsFamilyFriendly - READ-ONLY
	IsFamilyFriendly *bool `json:"isFamilyFriendly,omitempty"`
	// URL - READ-ONLY; The URL to get more information about the thing represented by this object.
	URL *string `json:"url,omitempty"`
	// ReadLink - READ-ONLY; The URL that returns this resource.
	ReadLink *string `json:"readLink,omitempty"`
	// WebSearchURL - READ-ONLY; The URL To Bing's search result for this item.
	WebSearchURL *string `json:"webSearchUrl,omitempty"`
	// PotentialAction - READ-ONLY
	PotentialAction *[]Action `json:"potentialAction,omitempty"`
	// ImmediateAction - READ-ONLY
	ImmediateAction *[]Action `json:"immediateAction,omitempty"`
	// PreferredClickthroughURL - READ-ONLY
	PreferredClickthroughURL *string `json:"preferredClickthroughUrl,omitempty"`
	// AdaptiveCard - READ-ONLY
	AdaptiveCard *string `json:"adaptiveCard,omitempty"`
	// ID - READ-ONLY; A String identifier.
	ID   *string `json:"id,omitempty"`
	Type *string `json:"_type,omitempty"`
}

// MarshalJSON is the custom marshaler for CreativeWork.
func (cw CreativeWork) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if cw.Type != nil {
		objectMap["_type"] = cw.Type
	}
	return json.Marshal(objectMap)
}

// Error defines the error that occurred.
type Error struct {
	// Code - The error code that identifies the category of error. Possible values include: 'None', 'ServerError', 'InvalidRequest', 'RateLimitExceeded', 'InvalidAuthorization', 'InsufficientAuthorization'
	Code ErrorCode `json:"code,omitempty"`
	// Message - A description of the error.
	Message *string `json:"message,omitempty"`
	// MoreDetails - READ-ONLY; A description that provides additional information about the error.
	MoreDetails *string `json:"moreDetails,omitempty"`
	// Parameter - READ-ONLY; The parameter in the request that caused the error.
	Parameter *string `json:"parameter,omitempty"`
	// Value - READ-ONLY; The parameter's value in the request that was not valid.
	Value *string `json:"value,omitempty"`
	Type  *string `json:"_type,omitempty"`
}

// MarshalJSON is the custom marshaler for Error.
func (e Error) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if e.Code != "" {
		objectMap["code"] = e.Code
	}
	if e.Message != nil {
		objectMap["message"] = e.Message
	}
	if e.Type != nil {
		objectMap["_type"] = e.Type
	}
	return json.Marshal(objectMap)
}

// ErrorResponse the top-level response that represents a failed request.
type ErrorResponse struct {
	// Errors - A list of errors that describe the reasons why the request failed.
	Errors *[]Error `json:"errors,omitempty"`
	// ReadLink - READ-ONLY; The URL that returns this resource.
	ReadLink *string `json:"readLink,omitempty"`
	// WebSearchURL - READ-ONLY; The URL To Bing's search result for this item.
	WebSearchURL *string `json:"webSearchUrl,omitempty"`
	// PotentialAction - READ-ONLY
	PotentialAction *[]Action `json:"potentialAction,omitempty"`
	// ImmediateAction - READ-ONLY
	ImmediateAction *[]Action `json:"immediateAction,omitempty"`
	// PreferredClickthroughURL - READ-ONLY
	PreferredClickthroughURL *string `json:"preferredClickthroughUrl,omitempty"`
	// AdaptiveCard - READ-ONLY
	AdaptiveCard *string `json:"adaptiveCard,omitempty"`
	// ID - READ-ONLY; A String identifier.
	ID   *string `json:"id,omitempty"`
	Type *string `json:"_type,omitempty"`
}

// MarshalJSON is the custom marshaler for ErrorResponse.
func (er ErrorResponse) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if er.Errors != nil {
		objectMap["errors"] = er.Errors
	}
	if er.Type != nil {
		objectMap["_type"] = er.Type
	}
	return json.Marshal(objectMap)
}

// Identifiable defines the identity of a resource.
type Identifiable struct {
	// ID - READ-ONLY; A String identifier.
	ID   *string `json:"id,omitempty"`
	Type *string `json:"_type,omitempty"`
}

// MarshalJSON is the custom marshaler for Identifiable.
func (i Identifiable) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if i.Type != nil {
		objectMap["_type"] = i.Type
	}
	return json.Marshal(objectMap)
}

// QueryContext defines the query context that Bing used for the request.
type QueryContext struct {
	// OriginalQuery - The query string as specified in the request.
	OriginalQuery *string `json:"originalQuery,omitempty"`
	// AlteredQuery - READ-ONLY; The query string used by Bing to perform the query. Bing uses the altered query string if the original query string contained spelling mistakes. For example, if the query string is "saling downwind", the altered query string will be "sailing downwind". This field is included only if the original query string contains a spelling mistake.
	AlteredQuery *string `json:"alteredQuery,omitempty"`
	// AlterationOverrideQuery - READ-ONLY; The query string to use to force Bing to use the original string. For example, if the query string is "saling downwind", the override query string will be "+saling downwind". Remember to encode the query string which results in "%2Bsaling+downwind". This field is included only if the original query string contains a spelling mistake.
	AlterationOverrideQuery *string `json:"alterationOverrideQuery,omitempty"`
	// AdultIntent - READ-ONLY; A Boolean value that indicates whether the specified query has adult intent. The value is true if the query has adult intent; otherwise, false.
	AdultIntent *bool `json:"adultIntent,omitempty"`
	// AskUserForLocation - READ-ONLY; A Boolean value that indicates whether Bing requires the user's location to provide accurate results. If you specified the user's location by using the X-MSEdge-ClientIP and X-Search-Location headers, you can ignore this field. For location aware queries, such as "today's weather" or "restaurants near me" that need the user's location to provide accurate results, this field is set to true. For location aware queries that include the location (for example, "Seattle weather"), this field is set to false. This field is also set to false for queries that are not location aware, such as "best sellers".
	AskUserForLocation *bool `json:"askUserForLocation,omitempty"`
	// IsTransactional - READ-ONLY
	IsTransactional *bool   `json:"isTransactional,omitempty"`
	Type            *string `json:"_type,omitempty"`
}

// MarshalJSON is the custom marshaler for QueryContext.
func (qc QueryContext) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if qc.OriginalQuery != nil {
		objectMap["originalQuery"] = qc.OriginalQuery
	}
	if qc.Type != nil {
		objectMap["_type"] = qc.Type
	}
	return json.Marshal(objectMap)
}

// Response defines a response. All schemas that could be returned at the root of a response should inherit
// from this
type Response struct {
	// ReadLink - READ-ONLY; The URL that returns this resource.
	ReadLink *string `json:"readLink,omitempty"`
	// WebSearchURL - READ-ONLY; The URL To Bing's search result for this item.
	WebSearchURL *string `json:"webSearchUrl,omitempty"`
	// PotentialAction - READ-ONLY
	PotentialAction *[]Action `json:"potentialAction,omitempty"`
	// ImmediateAction - READ-ONLY
	ImmediateAction *[]Action `json:"immediateAction,omitempty"`
	// PreferredClickthroughURL - READ-ONLY
	PreferredClickthroughURL *string `json:"preferredClickthroughUrl,omitempty"`
	// AdaptiveCard - READ-ONLY
	AdaptiveCard *string `json:"adaptiveCard,omitempty"`
	// ID - READ-ONLY; A String identifier.
	ID   *string `json:"id,omitempty"`
	Type *string `json:"_type,omitempty"`
}

// MarshalJSON is the custom marshaler for Response.
func (r Response) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if r.Type != nil {
		objectMap["_type"] = r.Type
	}
	return json.Marshal(objectMap)
}

// ResponseBase response base
type ResponseBase struct {
	Type *string `json:"_type,omitempty"`
}

// SearchAction ...
type SearchAction struct {
	// DisplayText - READ-ONLY
	DisplayText *string `json:"displayText,omitempty"`
	// Query - READ-ONLY
	Query *string `json:"query,omitempty"`
	// SearchKind - READ-ONLY; Possible values include: 'WebSearch', 'HistorySearch', 'DocumentSearch', 'TagSearch', 'LocationSearch', 'CustomSearch'
	SearchKind SearchKind `json:"searchKind,omitempty"`
	// Result - READ-ONLY
	Result *[]Thing `json:"result,omitempty"`
	// DisplayName - READ-ONLY
	DisplayName *string `json:"displayName,omitempty"`
	// IsTopAction - READ-ONLY
	IsTopAction *bool `json:"isTopAction,omitempty"`
	// ServiceURL - READ-ONLY
	ServiceURL *string `json:"serviceUrl,omitempty"`
	// ThumbnailURL - READ-ONLY; The URL to a thumbnail of the item.
	ThumbnailURL *string `json:"thumbnailUrl,omitempty"`
	// About - READ-ONLY; For internal use only.
	About *[]Thing `json:"about,omitempty"`
	// Mentions - READ-ONLY; For internal use only.
	Mentions *[]Thing `json:"mentions,omitempty"`
	// Provider - READ-ONLY; The source of the creative work.
	Provider *[]Thing `json:"provider,omitempty"`
	// Creator - READ-ONLY
	Creator *Thing `json:"creator,omitempty"`
	// Text - READ-ONLY; Text content of this creative work
	Text *string `json:"text,omitempty"`
	// DiscussionURL - READ-ONLY
	DiscussionURL *string `json:"discussionUrl,omitempty"`
	// CommentCount - READ-ONLY
	CommentCount *int32 `json:"commentCount,omitempty"`
	// MainEntity - READ-ONLY
	MainEntity *Thing `json:"mainEntity,omitempty"`
	// HeadLine - READ-ONLY
	HeadLine *string `json:"headLine,omitempty"`
	// CopyrightHolder - READ-ONLY
	CopyrightHolder *Thing `json:"copyrightHolder,omitempty"`
	// CopyrightYear - READ-ONLY
	CopyrightYear *int32 `json:"copyrightYear,omitempty"`
	// Disclaimer - READ-ONLY
	Disclaimer *string `json:"disclaimer,omitempty"`
	// IsAccessibleForFree - READ-ONLY
	IsAccessibleForFree *bool `json:"isAccessibleForFree,omitempty"`
	// Genre - READ-ONLY
	Genre *[]string `json:"genre,omitempty"`
	// IsFamilyFriendly - READ-ONLY
	IsFamilyFriendly *bool `json:"isFamilyFriendly,omitempty"`
	// URL - READ-ONLY; The URL to get more information about the thing represented by this object.
	URL *string `json:"url,omitempty"`
	// ReadLink - READ-ONLY; The URL that returns this resource.
	ReadLink *string `json:"readLink,omitempty"`
	// WebSearchURL - READ-ONLY; The URL To Bing's search result for this item.
	WebSearchURL *string `json:"webSearchUrl,omitempty"`
	// PotentialAction - READ-ONLY
	PotentialAction *[]Action `json:"potentialAction,omitempty"`
	// ImmediateAction - READ-ONLY
	ImmediateAction *[]Action `json:"immediateAction,omitempty"`
	// PreferredClickthroughURL - READ-ONLY
	PreferredClickthroughURL *string `json:"preferredClickthroughUrl,omitempty"`
	// AdaptiveCard - READ-ONLY
	AdaptiveCard *string `json:"adaptiveCard,omitempty"`
	// ID - READ-ONLY; A String identifier.
	ID   *string `json:"id,omitempty"`
	Type *string `json:"_type,omitempty"`
}

// MarshalJSON is the custom marshaler for SearchAction.
func (sa SearchAction) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if sa.Type != nil {
		objectMap["_type"] = sa.Type
	}
	return json.Marshal(objectMap)
}

// SearchResultsAnswer defines a search result answer.
type SearchResultsAnswer struct {
	// QueryContext - READ-ONLY
	QueryContext *QueryContext `json:"queryContext,omitempty"`
	// ReadLink - READ-ONLY; The URL that returns this resource.
	ReadLink *string `json:"readLink,omitempty"`
	// WebSearchURL - READ-ONLY; The URL To Bing's search result for this item.
	WebSearchURL *string `json:"webSearchUrl,omitempty"`
	// PotentialAction - READ-ONLY
	PotentialAction *[]Action `json:"potentialAction,omitempty"`
	// ImmediateAction - READ-ONLY
	ImmediateAction *[]Action `json:"immediateAction,omitempty"`
	// PreferredClickthroughURL - READ-ONLY
	PreferredClickthroughURL *string `json:"preferredClickthroughUrl,omitempty"`
	// AdaptiveCard - READ-ONLY
	AdaptiveCard *string `json:"adaptiveCard,omitempty"`
	// ID - READ-ONLY; A String identifier.
	ID   *string `json:"id,omitempty"`
	Type *string `json:"_type,omitempty"`
}

// MarshalJSON is the custom marshaler for SearchResultsAnswer.
func (sra SearchResultsAnswer) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if sra.Type != nil {
		objectMap["_type"] = sra.Type
	}
	return json.Marshal(objectMap)
}

// Suggestions ...
type Suggestions struct {
	autorest.Response `json:"-"`
	SuggestionGroups  *[]SuggestionsSuggestionGroup `json:"suggestionGroups,omitempty"`
	// QueryContext - READ-ONLY
	QueryContext *QueryContext `json:"queryContext,omitempty"`
	// ReadLink - READ-ONLY; The URL that returns this resource.
	ReadLink *string `json:"readLink,omitempty"`
	// WebSearchURL - READ-ONLY; The URL To Bing's search result for this item.
	WebSearchURL *string `json:"webSearchUrl,omitempty"`
	// PotentialAction - READ-ONLY
	PotentialAction *[]Action `json:"potentialAction,omitempty"`
	// ImmediateAction - READ-ONLY
	ImmediateAction *[]Action `json:"immediateAction,omitempty"`
	// PreferredClickthroughURL - READ-ONLY
	PreferredClickthroughURL *string `json:"preferredClickthroughUrl,omitempty"`
	// AdaptiveCard - READ-ONLY
	AdaptiveCard *string `json:"adaptiveCard,omitempty"`
	// ID - READ-ONLY; A String identifier.
	ID   *string `json:"id,omitempty"`
	Type *string `json:"_type,omitempty"`
}

// MarshalJSON is the custom marshaler for Suggestions.
func (s Suggestions) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if s.SuggestionGroups != nil {
		objectMap["suggestionGroups"] = s.SuggestionGroups
	}
	if s.Type != nil {
		objectMap["_type"] = s.Type
	}
	return json.Marshal(objectMap)
}

// SuggestionsSuggestionGroup ...
type SuggestionsSuggestionGroup struct {
	// Name - Possible values include: 'Unknown', 'Web', 'StoreApps', 'SearchHistory', 'PersonalSearchDocuments', 'PersonalSearchTags', 'Custom'
	Name              ScenarioType    `json:"name,omitempty"`
	SearchSuggestions *[]SearchAction `json:"searchSuggestions,omitempty"`
	Type              *string         `json:"_type,omitempty"`
}

// Thing defines a thing.
type Thing struct {
	// URL - READ-ONLY; The URL to get more information about the thing represented by this object.
	URL *string `json:"url,omitempty"`
	// ReadLink - READ-ONLY; The URL that returns this resource.
	ReadLink *string `json:"readLink,omitempty"`
	// WebSearchURL - READ-ONLY; The URL To Bing's search result for this item.
	WebSearchURL *string `json:"webSearchUrl,omitempty"`
	// PotentialAction - READ-ONLY
	PotentialAction *[]Action `json:"potentialAction,omitempty"`
	// ImmediateAction - READ-ONLY
	ImmediateAction *[]Action `json:"immediateAction,omitempty"`
	// PreferredClickthroughURL - READ-ONLY
	PreferredClickthroughURL *string `json:"preferredClickthroughUrl,omitempty"`
	// AdaptiveCard - READ-ONLY
	AdaptiveCard *string `json:"adaptiveCard,omitempty"`
	// ID - READ-ONLY; A String identifier.
	ID   *string `json:"id,omitempty"`
	Type *string `json:"_type,omitempty"`
}

// MarshalJSON is the custom marshaler for Thing.
func (t Thing) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	if t.Type != nil {
		objectMap["_type"] = t.Type
	}
	return json.Marshal(objectMap)
}
