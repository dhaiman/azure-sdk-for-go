package postgresqlhsc

// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// ConfigurationDataType enumerates the values for configuration data type.
type ConfigurationDataType string

const (
	// Boolean ...
	Boolean ConfigurationDataType = "Boolean"
	// Enumeration ...
	Enumeration ConfigurationDataType = "Enumeration"
	// Integer ...
	Integer ConfigurationDataType = "Integer"
	// Numeric ...
	Numeric ConfigurationDataType = "Numeric"
)

// PossibleConfigurationDataTypeValues returns an array of possible values for the ConfigurationDataType const type.
func PossibleConfigurationDataTypeValues() []ConfigurationDataType {
	return []ConfigurationDataType{Boolean, Enumeration, Integer, Numeric}
}

// CreateMode enumerates the values for create mode.
type CreateMode string

const (
	// CreateModeDefault ...
	CreateModeDefault CreateMode = "Default"
	// CreateModePointInTimeRestore ...
	CreateModePointInTimeRestore CreateMode = "PointInTimeRestore"
	// CreateModeServerGroupProperties ...
	CreateModeServerGroupProperties CreateMode = "ServerGroupProperties"
	// CreateModeUpdate ...
	CreateModeUpdate CreateMode = "Update"
)

// PossibleCreateModeValues returns an array of possible values for the CreateMode const type.
func PossibleCreateModeValues() []CreateMode {
	return []CreateMode{CreateModeDefault, CreateModePointInTimeRestore, CreateModeServerGroupProperties, CreateModeUpdate}
}

// OperationOrigin enumerates the values for operation origin.
type OperationOrigin string

const (
	// NotSpecified ...
	NotSpecified OperationOrigin = "NotSpecified"
	// System ...
	System OperationOrigin = "system"
	// User ...
	User OperationOrigin = "user"
)

// PossibleOperationOriginValues returns an array of possible values for the OperationOrigin const type.
func PossibleOperationOriginValues() []OperationOrigin {
	return []OperationOrigin{NotSpecified, System, User}
}

// ResourceProviderType enumerates the values for resource provider type.
type ResourceProviderType string

const (
	// Marlin ...
	Marlin ResourceProviderType = "Marlin"
	// Meru ...
	Meru ResourceProviderType = "Meru"
)

// PossibleResourceProviderTypeValues returns an array of possible values for the ResourceProviderType const type.
func PossibleResourceProviderTypeValues() []ResourceProviderType {
	return []ResourceProviderType{Marlin, Meru}
}

// ServerCitusVersion enumerates the values for server citus version.
type ServerCitusVersion string

const (
	// EightFullStopThree ...
	EightFullStopThree ServerCitusVersion = "8.3"
	// NineFullStopFive ...
	NineFullStopFive ServerCitusVersion = "9.5"
	// NineFullStopFour ...
	NineFullStopFour ServerCitusVersion = "9.4"
	// NineFullStopOne ...
	NineFullStopOne ServerCitusVersion = "9.1"
	// NineFullStopThree ...
	NineFullStopThree ServerCitusVersion = "9.3"
	// NineFullStopTwo ...
	NineFullStopTwo ServerCitusVersion = "9.2"
	// NineFullStopZero ...
	NineFullStopZero ServerCitusVersion = "9.0"
)

// PossibleServerCitusVersionValues returns an array of possible values for the ServerCitusVersion const type.
func PossibleServerCitusVersionValues() []ServerCitusVersion {
	return []ServerCitusVersion{EightFullStopThree, NineFullStopFive, NineFullStopFour, NineFullStopOne, NineFullStopThree, NineFullStopTwo, NineFullStopZero}
}

// ServerEdition enumerates the values for server edition.
type ServerEdition string

const (
	// GeneralPurpose ...
	GeneralPurpose ServerEdition = "GeneralPurpose"
	// MemoryOptimized ...
	MemoryOptimized ServerEdition = "MemoryOptimized"
)

// PossibleServerEditionValues returns an array of possible values for the ServerEdition const type.
func PossibleServerEditionValues() []ServerEdition {
	return []ServerEdition{GeneralPurpose, MemoryOptimized}
}

// ServerHaState enumerates the values for server ha state.
type ServerHaState string

const (
	// CreatingStandby ...
	CreatingStandby ServerHaState = "CreatingStandby"
	// FailingOver ...
	FailingOver ServerHaState = "FailingOver"
	// Healthy ...
	Healthy ServerHaState = "Healthy"
	// NotEnabled ...
	NotEnabled ServerHaState = "NotEnabled"
	// NotSync ...
	NotSync ServerHaState = "NotSync"
	// RemovingStandby ...
	RemovingStandby ServerHaState = "RemovingStandby"
	// ReplicatingData ...
	ReplicatingData ServerHaState = "ReplicatingData"
)

// PossibleServerHaStateValues returns an array of possible values for the ServerHaState const type.
func PossibleServerHaStateValues() []ServerHaState {
	return []ServerHaState{CreatingStandby, FailingOver, Healthy, NotEnabled, NotSync, RemovingStandby, ReplicatingData}
}

// ServerRole enumerates the values for server role.
type ServerRole string

const (
	// Coordinator ...
	Coordinator ServerRole = "Coordinator"
	// Worker ...
	Worker ServerRole = "Worker"
)

// PossibleServerRoleValues returns an array of possible values for the ServerRole const type.
func PossibleServerRoleValues() []ServerRole {
	return []ServerRole{Coordinator, Worker}
}

// ServerState enumerates the values for server state.
type ServerState string

const (
	// Disabled ...
	Disabled ServerState = "Disabled"
	// Dropping ...
	Dropping ServerState = "Dropping"
	// Ready ...
	Ready ServerState = "Ready"
	// Starting ...
	Starting ServerState = "Starting"
	// Stopped ...
	Stopped ServerState = "Stopped"
	// Stopping ...
	Stopping ServerState = "Stopping"
	// Updating ...
	Updating ServerState = "Updating"
)

// PossibleServerStateValues returns an array of possible values for the ServerState const type.
func PossibleServerStateValues() []ServerState {
	return []ServerState{Disabled, Dropping, Ready, Starting, Stopped, Stopping, Updating}
}

// ServerVersion enumerates the values for server version.
type ServerVersion string

const (
	// OneOne ...
	OneOne ServerVersion = "11"
	// OneTwo ...
	OneTwo ServerVersion = "12"
)

// PossibleServerVersionValues returns an array of possible values for the ServerVersion const type.
func PossibleServerVersionValues() []ServerVersion {
	return []ServerVersion{OneOne, OneTwo}
}
