package policyapi

// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"context"
	"github.com/Azure/azure-sdk-for-go/services/preview/resources/mgmt/2020-07-01-preview/policyexemptions"
	"github.com/Azure/go-autorest/autorest"
)

// ExemptionsClientAPI contains the set of methods on the ExemptionsClient type.
type ExemptionsClientAPI interface {
	CreateOrUpdate(ctx context.Context, parameters policy.Exemption, scope string, policyExemptionName string) (result policy.Exemption, err error)
	Delete(ctx context.Context, scope string, policyExemptionName string) (result autorest.Response, err error)
	Get(ctx context.Context, scope string, policyExemptionName string) (result policy.Exemption, err error)
	List(ctx context.Context, subscriptionID string, filter string) (result policy.ExemptionListResultPage, err error)
	ListComplete(ctx context.Context, subscriptionID string, filter string) (result policy.ExemptionListResultIterator, err error)
	ListForManagementGroup(ctx context.Context, managementGroupID string, filter string) (result policy.ExemptionListResultPage, err error)
	ListForManagementGroupComplete(ctx context.Context, managementGroupID string, filter string) (result policy.ExemptionListResultIterator, err error)
	ListForResource(ctx context.Context, subscriptionID string, resourceGroupName string, resourceProviderNamespace string, parentResourcePath string, resourceType string, resourceName string, filter string) (result policy.ExemptionListResultPage, err error)
	ListForResourceComplete(ctx context.Context, subscriptionID string, resourceGroupName string, resourceProviderNamespace string, parentResourcePath string, resourceType string, resourceName string, filter string) (result policy.ExemptionListResultIterator, err error)
	ListForResourceGroup(ctx context.Context, subscriptionID string, resourceGroupName string, filter string) (result policy.ExemptionListResultPage, err error)
	ListForResourceGroupComplete(ctx context.Context, subscriptionID string, resourceGroupName string, filter string) (result policy.ExemptionListResultIterator, err error)
}

var _ ExemptionsClientAPI = (*policy.ExemptionsClient)(nil)
